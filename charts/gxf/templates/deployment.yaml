apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      annotations:
        prometheus.io/port: '9404'
        prometheus.io/scrape: 'true'
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
{{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
{{- end }}
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image }}{{- if .Values.imageTag -}}:{{- end -}}{{ .Values.imageTag }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}

        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APP_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          #The environment variables below
          #are used directly by the application
          #they are the environment variable versions
          #of the variables defined in *.properties files.
          #'db.username' = DB_USERNAME
          - name: DB_USERNAME
            value: osp_admin
          {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value }}
          {{- end }}
          {{- range .Values.envFromSecrets }}
          - name: {{ .name }}
            valueFrom:
              secretKeyRef:
                name: {{ .secretName }}
                key: {{ .secretKey }}
          {{- end }}
        ports:
{{- if .Values.httpdSidecar.enabled }}
          - containerPort: 8009
            name: ajp
            protocol: TCP
{{- else }}
          - containerPort: 8080
            name: http
            protocol: TCP
{{- end }}
{{- range .Values.extraPorts }}
          - containerPort: {{ .port }}
            name: {{ .name }}
            protocol: {{ .protocol | default "TCP" }}
{{- end }}
        volumeMounts:
        - name: osgp-config
          mountPath: /etc/osgp
        - name: osgp-config
          mountPath: /etc/osp
        - name: tomcat-config
          mountPath: /usr/local/tomcat/conf/server.xml
          subPath: server.xml
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
{{- if .Values.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
{{- end }}
{{- if .Values.startupProbe }}
        startupProbe:
{{ toYaml .Values.startupProbe | indent 10 }}
{{- end }}
{{- if .Values.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
{{- end }}
{{- if .Values.httpdSidecar.enabled }}
      - name: httpd
        image: {{ .Values.httpdSidecar.image }}{{- if .Values.httpdSidecar.imageTag -}}:{{- end -}}{{ .Values.httpdSidecar.imageTag }}
{{- if .Values.httpdSidecar.resources }}
        resources: 
{{ toYaml .Values.httpdSidecar.resources | indent 10 }}
{{- end }}
        ports:
        - containerPort: 443
        volumeMounts:
        - name: apache-config
          mountPath: /usr/local/apache2/conf/httpd.conf
          subPath: httpd.conf
        - name: apache-config
          mountPath: /usr/local/apache2/conf/extra/httpd-vhosts.conf
          subPath: vhosts.conf
        - name: apache-config
          mountPath: /usr/local/apache2/conf/extra/httpd-ssl.conf
          subPath: ssl.conf
        - name: apache-server-certs
          mountPath: /certs
{{- if .Values.httpdSidecar.extraVolumeMounts }}
{{ toYaml .Values.httpdSidecar.extraVolumeMounts | indent 8 }}
{{- end }}
{{- if .Values.httpdSidecar.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.httpdSidecar.readinessProbe | indent 10 }}
{{- end }}
{{- if .Values.httpdSidecar.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.httpdSidecar.livenessProbe | indent 10 }}
{{- end }}
{{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
      volumes:
      - name: osgp-config
        configMap:
          name: {{ .Release.Name }}
      - name: tomcat-config
        configMap:
          name: {{ .Release.Name }}-tomcat
{{- if .Values.httpdSidecar.enabled }}
      - name: apache-config
        configMap:
          name: {{ .Release.Name }}-apache
      - name: apache-server-certs
        secret:
          secretName: {{ .Release.Name }}.apache-server-certs
          defaultMode: 320
{{- end }}
{{- if .Values.extraVolumes }}
{{- if eq (typeOf .Values.extraVolumes) "[]interface {}"}}
{{ toYaml .Values.extraVolumes | indent 6 }}
{{- else if eq (typeOf .Values.extraVolumes) "string" }}
{{- with .Values.extraVolumes }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- end}}
{{- end }}
      terminationGracePeriodSeconds: 60
